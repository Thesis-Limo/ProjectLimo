// Generated by gencpp from file limo_behaviour_tree/EndGoalRequest.msg
// DO NOT EDIT!


#ifndef LIMO_BEHAVIOUR_TREE_MESSAGE_ENDGOALREQUEST_H
#define LIMO_BEHAVIOUR_TREE_MESSAGE_ENDGOALREQUEST_H


#include <string>
#include <vector>
#include <memory>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <geometry_msgs/Point.h>

namespace limo_behaviour_tree
{
template <class ContainerAllocator>
struct EndGoalRequest_
{
  typedef EndGoalRequest_<ContainerAllocator> Type;

  EndGoalRequest_()
    : goalPos()  {
    }
  EndGoalRequest_(const ContainerAllocator& _alloc)
    : goalPos(_alloc)  {
  (void)_alloc;
    }



   typedef  ::geometry_msgs::Point_<ContainerAllocator>  _goalPos_type;
  _goalPos_type goalPos;





  typedef boost::shared_ptr< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> const> ConstPtr;

}; // struct EndGoalRequest_

typedef ::limo_behaviour_tree::EndGoalRequest_<std::allocator<void> > EndGoalRequest;

typedef boost::shared_ptr< ::limo_behaviour_tree::EndGoalRequest > EndGoalRequestPtr;
typedef boost::shared_ptr< ::limo_behaviour_tree::EndGoalRequest const> EndGoalRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator1> & lhs, const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator2> & rhs)
{
  return lhs.goalPos == rhs.goalPos;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator1> & lhs, const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace limo_behaviour_tree

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsFixedSize< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "f43f04c866179f13e0ff9145477de5ab";
  }

  static const char* value(const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xf43f04c866179f13ULL;
  static const uint64_t static_value2 = 0xe0ff9145477de5abULL;
};

template<class ContainerAllocator>
struct DataType< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "limo_behaviour_tree/EndGoalRequest";
  }

  static const char* value(const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "geometry_msgs/Point goalPos\n"
"\n"
"================================================================================\n"
"MSG: geometry_msgs/Point\n"
"# This contains the position of a point in free space\n"
"float64 x\n"
"float64 y\n"
"float64 z\n"
;
  }

  static const char* value(const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.goalPos);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct EndGoalRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::limo_behaviour_tree::EndGoalRequest_<ContainerAllocator>& v)
  {
    s << indent << "goalPos: ";
    s << std::endl;
    Printer< ::geometry_msgs::Point_<ContainerAllocator> >::stream(s, indent + "  ", v.goalPos);
  }
};

} // namespace message_operations
} // namespace ros

#endif // LIMO_BEHAVIOUR_TREE_MESSAGE_ENDGOALREQUEST_H
